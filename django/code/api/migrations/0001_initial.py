# Generated by Django 3.2 on 2022-09-15 10:22

import api.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=121, verbose_name='氏名')),
                ('username', models.CharField(error_messages={'unique': 'ユーザー名が既に使用されています'}, help_text='121文字以下で入力してください @/./+/-/_ が使用できます', max_length=121, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='ユーザー名')),
                ('account_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='CLIENT NAME')),
                ('is_active', models.BooleanField(default=True, help_text='ユーザーをアクティブとして扱うかどうかを指定します アカウントを削除する代わりに、これを選択解除します', verbose_name='is_active')),
                ('date_joined', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='追加日')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'ユーザー',
                'db_table': 'users',
            },
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
    ]
